// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int @id @default(autoincrement())
  name  String
  email String
  image String?

  conversations ConversationUser[]
  messages Message[]
  friends Friendship[] @relation("UserFriends")
  friendOf Friendship[] @relation("UserFriendOf")
}

model Conversation {
  id        Int    @id @default(autoincrement())
  conversation_type ConversationType @default(personal)
  name      String?
  image     String?
  description String?
  created_at DateTime @default(now())

  users ConversationUser[]
  messages Message[]
}

model ConversationUser {
  user_id Int
  conversation_id Int
  user_role ConversationUserRole @default(member)

  user User @relation(fields: [user_id], references: [id])
  conversation Conversation @relation(fields: [conversation_id], references: [id])

  @@id([user_id, conversation_id])
}

model Message {
  id        Int    @id @default(autoincrement())
  text      String
  message_type MessageType @default(text)
  message_actor_type MessageActorType @default(user)
  created_at DateTime @default(now())
  user_id   Int
  conversation_id Int

  user      User @relation(fields: [user_id], references: [id])
  conversation Conversation @relation(fields: [conversation_id], references: [id])
}

model Friendship {
  id            Int      @id @default(autoincrement())
  created_at    DateTime @default(now())
  accepted_at   DateTime?
  user_id       Int
  friend_id     Int
  status        FriendshipStatus @default(pending)

  user          User     @relation("UserFriends", fields: [user_id], references: [id])
  friend        User     @relation("UserFriendOf", fields: [friend_id], references: [id])

  @@unique([user_id, friend_id])
  @@index([user_id])
  @@index([friend_id])
}

enum ConversationType {
  personal
  group
}

enum MessageType {
  text
  image
}

enum MessageActorType {
  user
  system
  bot
}

enum FriendshipStatus {
  pending
  accepted
}

enum ConversationUserRole {
  member
  admin
}